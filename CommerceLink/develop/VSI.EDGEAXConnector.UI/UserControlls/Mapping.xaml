<UserControl x:Class="VSI.EDGEAXConnector.UI.UserControlls.Mapping"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:convertors="clr-namespace:VSI.EDGEAXConnector.UI.Convertors"
        xmlns:userControl="clr-namespace:VSI.EDGEAXConnector.UI.UserControlls"
        xmlns:multi ="System.Windows.Data.MultiBinding"
        xmlns:viewModel="clr-namespace:VSI.EDGEAXConnector.UI.ViewModel">
    <UserControl.Resources>
        <viewModel:MapsViewModel x:Key="ViewModel" />
        <convertors:BoolToVisibilityConverter x:Key="VisibilityConverter"/>
        <convertors:BoolInvertToVisibilityConverter x:Key="NoVisibilityConverter"/>
        <convertors:BooleanToVisibilityMultiConverter x:Key="MultiVisibilityConverter"/>
        <convertors:ToggleButtonConvertor x:Key="toggleConvertor"/>
        <convertors:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
        <convertors:StringNullOrEmptyToVisibilityConverter x:Key="StringNullToVisibilityConverter" />
        <convertors:PropertiesToBrushConvertor x:Key="PropertiesBrushConvertor" />
        <convertors:IsCommentToBrushConvertor x:Key="IsCommentBrushConvertor" />
        <convertors:IsCommentToStrikethroughConvertor x:Key="IsCommentStrikethroughConvertor" />
        <ControlTemplate x:Key="validationErrorTemplate">
            <DockPanel>
                <TextBlock Foreground="Red" 
            DockPanel.Dock="Top">!</TextBlock>
                <AdornedElementPlaceholder 
           x:Name="ErrorAdorner"
        ></AdornedElementPlaceholder>
            </DockPanel>
        </ControlTemplate>
        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
        <ControlTemplate x:Key="toggleButtonTemplate" TargetType="ToggleButton">
            <Grid
            Width="15"
            Height="13"
            Background="Transparent">
                <Path x:Name="ExpandPath"
              HorizontalAlignment="Left" 
              VerticalAlignment="Center" 
              Margin="1,1,1,1"
              Fill="{StaticResource GlyphBrush}"
              Data="M 4 0 L 8 4 L 4 8 Z"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsChecked"
                 Value="True">
                    <Setter Property="Data"
                  TargetName="ExpandPath"
                  Value="M 0 4 L 8 4 L 4 8 Z"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="toggleButtonStyle" TargetType="ToggleButton">
            <Setter Property="Template" Value="{StaticResource toggleButtonTemplate}" />
        </Style>
        <DataTemplate x:Key="ExpandDetails">
            <ToggleButton Name="ShowDetails" Style="{StaticResource toggleButtonStyle}" IsChecked="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, 
                                                  Path=DetailsVisibility, 
                                                  Converter={StaticResource toggleConvertor},
                                                  Mode=TwoWay}" 
                              Margin="4" />
        </DataTemplate>

    </UserControl.Resources>
    <Grid>
        <Grid x:Name="grdMapping" Visibility="Collapsed">
            <Grid.RowDefinitions>
                <RowDefinition Height="32"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="42"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200*" />
                <ColumnDefinition Width="600*"/>
            </Grid.ColumnDefinitions>
        
            <StackPanel Grid.ColumnSpan="2">
                <TextBlock FontWeight="Bold"  Foreground="Gray" FontSize="20" Text="{Binding MapTitle}" Margin="5,0,0,0"/>
            </StackPanel>
       
            <TreeView Margin="5,0,0,0" BorderBrush="WhiteSmoke" BorderThickness="2" Grid.Row="1">
                <TreeViewItem Header="Maps"  IsExpanded="True">
                    <TreeViewItem Header="{Binding MapTitle}">
                        <TreeView Margin="-30,0,0,0" BorderThickness="0"  Name="mapTree" SelectedItemChanged="mapTree_SelectedItemChanged" ItemsSource="{Binding ExistingMaps}" FontSize="11" >
                        <TreeView.ItemTemplate>
                            <DataTemplate>
                                <StackPanel  Orientation="Horizontal">
                                
                                    <TextBlock  VerticalAlignment="Center" Margin="0,0,0,0">
                                        <TextBlock.Text>
                                            <MultiBinding StringFormat="{}{0} - {1} Map">
                                                <Binding Path="SourceClass.Name" />
                                                <Binding Path="DestinationClass.Name" />
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>

                                </StackPanel>
                            </DataTemplate>

                        </TreeView.ItemTemplate>


                    </TreeView>
                    </TreeViewItem>
                    <!--<TreeViewItem Header="ECommerce to ERP">
                        <TreeViewItem Header="MGAddress - Address Map"></TreeViewItem>
                        <TreeViewItem Header="MGCustomer - Customer Map"></TreeViewItem>
                    </TreeViewItem>-->
                
                </TreeViewItem>
            </TreeView>
            <Border BorderThickness="2" Margin="0,0,0,0" Grid.Row="1" Grid.Column="1"  BorderBrush="WhiteSmoke" CornerRadius="0">
                <TabControl Name="mainMappingTabs" BorderThickness="1" HorizontalAlignment="Stretch" TabStripPlacement="Bottom" SelectionChanged="mainMappingTabs_SelectionChanged">
                    <TabItem Name="tabMapping" Header="Mapping" IsSelected="True"  Style="{DynamicResource TabItemSmallYStyle}">
                        <DataGrid Background="Transparent" Name="dgMapDetails"  VerticalAlignment="Top" HorizontalAlignment="Left"  Grid.Row="2" RowDetailsVisibilityMode="Collapsed"  AutoGenerateColumns="False" Grid.ColumnSpan="3" ItemsSource="{Binding Properties}" Grid.RowSpan="1" CanUserSortColumns="True">
                            <DataGrid.Resources>
                                <Style TargetType="{x:Type DataGridColumnHeader}">
                                    <Setter Property="Background" Value="#1E5C70" />
                                    <Setter Property="Foreground" Value="White" />
                                    <Setter Property="FontWeight" Value="Bold" />
                                    <Setter Property="Height" Value="32" />
                                    <Setter Property="BorderBrush" Value="#A7D8E8" />
                                    <Setter Property="BorderThickness" Value="0,0,1,0" />
                                    <Setter Property="Padding" Value="10,0,0,0" />
                                </Style>
                            </DataGrid.Resources>
                            <DataGrid.Columns>
                                <DataGridTemplateColumn x:Name="colTarget" Header="Target" Width="200*" CanUserSort="True" SortMemberPath="DestinationProperty.Name" SortDirection="Ascending">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Border BorderThickness="1">
                                                <StackPanel>
                                                    <TextBlock  Text="{Binding DestinationProperty.Name}" FontSize="11" TextDecorations="{Binding IsComment, Converter={StaticResource IsCommentStrikethroughConvertor}}"></TextBlock>
                                                    <TextBlock Foreground="LightGray" FontStyle="Italic" Text="{Binding DestinationProperty.PropertyType}" FontSize="10"></TextBlock>
                                                </StackPanel>
                                            </Border>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn x:Name="colSource" Header="Source" Width="200*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel>
                                                <Border BorderThickness="1">
                                                    <Border.BorderBrush>
                                                        <MultiBinding Converter="{StaticResource PropertiesBrushConvertor}">
                                                            <Binding Path="SourceProperty"/>
                                                            <Binding Path="DestinationProperty"/>
                                                        </MultiBinding>
                                                    </Border.BorderBrush>
                                                    <StackPanel Orientation="Horizontal">
                                                        <Image Source="..\Contents\Images\comments.png" ToolTip="{Binding Comment}" Visibility="{Binding Comment,Converter={StaticResource StringNullToVisibilityConverter}}" Width="24" VerticalAlignment="Center" Margin="0,0,5,0" />
                                                        <StackPanel Visibility="{Binding CustomConditionalValue.IsAdvancedExpression,Converter={StaticResource NoVisibilityConverter}}">
                                                            <TextBlock Text="{Binding SourceProperty.Name}" FontSize="11"></TextBlock>
                                                            <TextBlock Foreground="LightGray" FontStyle="Italic" Text="{Binding SourceProperty.PropertyType}" FontSize="10"></TextBlock>
                                                        </StackPanel>
                                                        <TextBlock Visibility="{Binding ConstantValue.UseAsDefault,Converter={StaticResource VisibilityConverter}}" FontSize="11" Margin="6,0,0,0" Text=" | Default Value : "/>
                                                        <TextBlock Visibility="{Binding ConstantValue.UseAsDefault,Converter={StaticResource VisibilityConverter}}" FontSize="11" Text="{Binding ConstantValue.Value}"></TextBlock>

                                                        <TextBlock Visibility="{Binding ConstantValue.IsConstant,Converter={StaticResource VisibilityConverter}}" FontSize="11" Text="{Binding ConstantValue.Value}"></TextBlock>

                                                        <TextBlock Visibility="{Binding ConstantValue.IsKeyMapping,Converter={StaticResource VisibilityConverter}}" FontSize="11" Text=" | Key : "></TextBlock>
                                                        <TextBlock Visibility="{Binding ConstantValue.IsKeyMapping,Converter={StaticResource VisibilityConverter}}" FontSize="11" Text="{Binding ConstantValue.Value}"></TextBlock>

                                                        <StackPanel Orientation="Horizontal" Visibility="{Binding BooleanValue.IsBoolean,Converter={StaticResource VisibilityConverter}}">
                                                            <TextBlock Text=" ? " FontSize="11"></TextBlock>
                                                            <TextBlock Text="{Binding BooleanValue.TrueValue}" FontSize="11"></TextBlock>
                                                            <TextBlock Text=" : " FontSize="11"></TextBlock>
                                                            <TextBlock Text="{Binding BooleanValue.FalseValue}" FontSize="11"></TextBlock>
                                                        </StackPanel>
                                                        <StackPanel Orientation="Horizontal" Visibility="{Binding CustomConditionalValue.IsCustomCondition,Converter={StaticResource VisibilityConverter}}">
                                                            <StackPanel Orientation="Horizontal" Visibility="{Binding CustomConditionalValue.IsAdvancedExpression,Converter={StaticResource NoVisibilityConverter}}">
                                                                <TextBlock Text=" " FontSize="11"></TextBlock>
                                                                <TextBlock Text="{Binding CustomConditionalValue.OperatorValue}" FontSize="11"></TextBlock>
                                                                <TextBlock Text=" " FontSize="11"></TextBlock>
                                                                <TextBlock Text="{Binding CustomConditionalValue.ConditionValue}" FontSize="11"></TextBlock>
                                                                <TextBlock Text=" True? : " FontSize="11"></TextBlock>
                                                                <TextBlock Visibility="{Binding CustomConditionalValue.IsTrueSourceProperty,Converter={StaticResource NoVisibilityConverter}}" FontSize="11" Text="{Binding CustomConditionalValue.TrueValue}"></TextBlock>
                                                                <StackPanel Visibility="{Binding CustomConditionalValue.IsTrueSourceProperty,Converter={StaticResource VisibilityConverter}}">
                                                                    <TextBlock Text="{Binding CustomConditionalValue.TrueSourceProperty.Name}" FontSize="11"></TextBlock>
                                                                    <TextBlock Foreground="LightGray" FontStyle="Italic" FontSize="10" Text="{Binding CustomConditionalValue.TrueSourceProperty.PropertyType}"></TextBlock>
                                                                </StackPanel>
                                                                <TextBlock Text=" False? : " FontSize="11"></TextBlock>
                                                                <TextBlock Visibility="{Binding CustomConditionalValue.IsFalseSourceProperty,Converter={StaticResource NoVisibilityConverter}}" FontSize="11" Text="{Binding CustomConditionalValue.FalseValue}"></TextBlock>
                                                                <StackPanel Visibility="{Binding CustomConditionalValue.IsFalseSourceProperty,Converter={StaticResource VisibilityConverter}}">
                                                                    <TextBlock Text="{Binding CustomConditionalValue.FalseSourceProperty.Name}" FontSize="11"></TextBlock>
                                                                    <TextBlock Foreground="LightGray" FontStyle="Italic" FontSize="10" Text="{Binding CustomConditionalValue.FalseSourceProperty.PropertyType}"></TextBlock>
                                                                </StackPanel>
                                                            </StackPanel>
                                                            <StackPanel Orientation="Horizontal" Visibility="{Binding CustomConditionalValue.IsAdvancedExpression,Converter={StaticResource VisibilityConverter}}">
                                                                <TextBlock Text="{Binding CustomConditionalValue.AdvancedExpression}" FontSize="11"></TextBlock>
                                                            </StackPanel>
                                                        </StackPanel>
                                                    </StackPanel>
                                                </Border>
                                            </StackPanel>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="50"/>
                                                    <ColumnDefinition Width="50"/>
                                                </Grid.ColumnDefinitions>
                                                <ComboBox Name="cboSourceProp"  Grid.Column="0" IsEditable="True" IsTextSearchEnabled="True" TextSearch.TextPath="Name"   SelectionChanged="cboSourceProp_SelectionChanged"
                                     ItemsSource="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, 
                                    Path=DataContext.SourceProperties}">
                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <StackPanel Orientation="Horizontal">
                                                                <TextBlock Text="{Binding Name}" FontSize="11" />
                                                                <TextBlock Foreground="LightGray" Text="{Binding PropertyType}" Margin="5,0,0,0" FontSize="10" />
                                                            </StackPanel>
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>
                                                </ComboBox>
                                                <Button Content="Custom" Margin="5,0,0,0" Grid.Column="1" Name="btnNullCheck" Click="btnNullCheck_Click" Height="32" />
                                                <Button Content="Clear"  Margin="5,0,0,0" Grid.Column="2"  Name="btnClearMappingButton" Click="btnClearMappingButton_OnClick" Height="32" ></Button>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Complex Value?" Width="100*" >
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel>
                                                <CheckBox IsEnabled="False" IsChecked="{Binding IsComplex}" />
                                                <!--<TextBlock FontStyle="Italic" Text="{Binding IsComplex}"></TextBlock>-->
                                            </StackPanel>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <CheckBox Name="complexPropertyCheck" IsChecked="{Binding IsComplex, UpdateSourceTrigger=PropertyChanged}" Checked="complexPropertyCheck_Checked" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Custom Expression" Width="100*" >
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel>
                                                <CheckBox IsEnabled="False" IsChecked="{Binding IsCustomLogic}" />
                                                <!--<TextBlock FontStyle="Italic" Text="{Binding IsCustomLogic}"></TextBlock>-->
                                            </StackPanel>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <CheckBox IsEnabled="False"  IsChecked="{Binding IsCustomLogic, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Is Comment" Width="100*" >
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel>
                                                <CheckBox IsEnabled="False" IsChecked="{Binding IsComment}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <CheckBox  Name="commentPropertyCheck" IsEnabled="True"  IsChecked="{Binding IsComment, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </TabItem>
                    <TabItem Name="tabXml" Header="XML" Style="{DynamicResource TabItemSmallYStyle}">
                        <userControl:XMLViewer x:Name="vXMLViwer" />
                    </TabItem>
                    <TabItem Name="tabCode" Header="CS Code" Style="{DynamicResource TabItemSmallYStyle}">
                        <FlowDocumentReader x:Name="cCodeReader"
                                            IsScrollViewEnabled="True"
                                            IsTwoPageViewEnabled="False"
                                            ViewingMode="Scroll"
                                            Zoom="1"
                                            Foreground="Black"
                                            FontSize="11"
                                            VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                        </FlowDocumentReader>
                    </TabItem>
                </TabControl>
            </Border>
       
            <StackPanel HorizontalAlignment="Left" Grid.Column="0"  Grid.Row="2" Orientation="Horizontal" >
                <Button Name="btnShowDirection" Click="btnShowDirection_Click"  Style="{StaticResource RedButtonStyle}" Foreground="#ffffff" Width="130" Margin="5">Change Direction</Button>
                <Button Name="btnLoadMap" Click="btnLoadMap_Click"  Style="{StaticResource BlueButtonStyle}" Foreground="#ffffff" Width="100" Height="32" Margin="5">Load Map</Button>
            </StackPanel>
            <StackPanel HorizontalAlignment="Right" Grid.Column="1"  Grid.Row="2" Orientation="Horizontal" >
                <Button Name="btnNewMap" Click="btnNewMap_Click"  Style="{StaticResource GreenButtonStyle}" Foreground="#ffffff" Width="130" Height="32" Margin="5">Add New Map</Button>
                <Button Name="btnTransform" Click="btnTransform_Click" Style="{StaticResource BlueButtonStyle}" Foreground="#ffffff" Width="130" Height="32" Margin="5">Generate Map</Button>
                <Button Name="btnDelete" Click="btnDelete_Click" Style="{StaticResource RedButtonStyle}" Foreground="#ffffff" Width="110" Height="32" Margin="5">Delete Map</Button>
            </StackPanel>        
        </Grid>
        <Grid x:Name="grdDirection">
            <userControl:SourceSelector/>
        </Grid>
    </Grid>
</UserControl>
