<UserControl x:Class="VSI.EDGEAXConnector.UI.UserControlls.NewMap"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"       
        xmlns:local="clr-namespace:VSI.EDGEAXConnector.UI"
        xmlns:convertors="clr-namespace:VSI.EDGEAXConnector.UI.Convertors"
          >
    <UserControl.Resources>
        <convertors:BoolToVisibilityConverter x:Key="VisibilityConverter"/>
        <convertors:BoolInvertToVisibilityConverter x:Key="NoVisibilityConverter"/>
        <convertors:BooleanToVisibilityMultiConverter x:Key="MultiVisibilityConverter"/>
        <convertors:ToggleButtonConvertor x:Key="toggleConvertor"/>
        <convertors:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
        <convertors:StringNullOrEmptyToVisibilityConverter x:Key="StringNullToVisibilityConverter" />
        <convertors:PropertiesToBrushConvertor x:Key="PropertiesBrushConvertor" />
        <convertors:IsCommentToBrushConvertor x:Key="IsCommentBrushConvertor" />
        <convertors:IsCommentToStrikethroughConvertor x:Key="IsCommentStrikethroughConvertor" />
        <ControlTemplate x:Key="validationErrorTemplate">
            <DockPanel>
                <TextBlock Foreground="Red" 
            DockPanel.Dock="Top">!</TextBlock>
                <AdornedElementPlaceholder 
           x:Name="ErrorAdorner"
        ></AdornedElementPlaceholder>
            </DockPanel>
        </ControlTemplate>
    </UserControl.Resources>
    <Grid Background="AliceBlue">
        <Grid.RowDefinitions>            
            <RowDefinition Height="27"/>
            <RowDefinition Height="38"/>
            <RowDefinition Height="400"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200*"/>
            <ColumnDefinition Width="200*"/>
            <ColumnDefinition Width="100*"/>
            <ColumnDefinition Width="100*"/>
        </Grid.ColumnDefinitions>
        <TextBlock Text="Destination" VerticalAlignment="Center" TextAlignment="Center" Grid.Row="0"  Height="16"/>
        <TextBlock Text="Source" VerticalAlignment="Center" TextAlignment="Center" Grid.Column="1"  Grid.Row="0" Grid.ColumnSpan="1" Height="16"/>
        <ComboBox Name="cboDest" IsEditable="True"  ItemsSource="{Binding DestEntities}" SelectedIndex="0" SelectedItem="{Binding SelectedDestEntity}" DisplayMemberPath="Name" Grid.ColumnSpan="1"  Grid.Row="1" Grid.RowSpan="1" Margin="5,6,0,6"/>
        <ComboBox Name="cboSrc" IsEditable="True" IsTextSearchEnabled="True" TextSearch.TextPath="Name"   ItemsSource="{Binding SrcEntities}" SelectedIndex="0" SelectedItem="{Binding SelectedSrcEntity}" DisplayMemberPath="Name"  Grid.Row="1" Grid.RowSpan="1" Grid.Column="1" Margin="5,6,0,6"/>
        <DataGrid Background="Transparent" MaxHeight="400" VerticalAlignment="Top" Grid.Row="2"  AutoGenerateColumns="False" Grid.ColumnSpan="4" ItemsSource="{Binding Transformer.Properties}" Grid.RowSpan="1" CanUserSortColumns="True" HorizontalAlignment="Stretch" >
            <DataGrid.Resources>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="#1E5C70" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="FontWeight" Value="Bold" />
                    <Setter Property="Height" Value="32" />
                    <Setter Property="BorderBrush" Value="#A7D8E8" />
                    <Setter Property="BorderThickness" Value="0,0,1,0" />
                    <Setter Property="Padding" Value="10,0,0,0" />
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Target" Width="300*" CanUserSort="True" SortMemberPath="DestinationProperty.Name" SortDirection="Ascending">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Border BorderThickness="1">
                                <StackPanel>
                                    <TextBlock  Text="{Binding DestinationProperty.Name}" FontSize="11" TextDecorations="{Binding IsComment, Converter={StaticResource IsCommentStrikethroughConvertor}}" ></TextBlock>
                                    <TextBlock Foreground="LightGray" FontStyle="Italic" Text="{Binding DestinationProperty.PropertyType}" FontSize="10"></TextBlock>
                                </StackPanel>
                            </Border>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Source"  Width="300*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <Border BorderThickness="1">
                                    <Border.BorderBrush>
                                        <MultiBinding Converter="{StaticResource PropertiesBrushConvertor}">
                                            <Binding Path="SourceProperty"/>
                                            <Binding Path="DestinationProperty"/>
                                        </MultiBinding>
                                    </Border.BorderBrush>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="..\Contents\Images\comments.png" ToolTip="{Binding Comment}" Visibility="{Binding Comment,Converter={StaticResource StringNullToVisibilityConverter}}" Width="24" VerticalAlignment="Center" Margin="0,0,5,0" />
                                        <StackPanel Visibility="{Binding CustomConditionalValue.IsAdvancedExpression,Converter={StaticResource NoVisibilityConverter}}">
                                            <TextBlock Text="{Binding SourceProperty.Name}" FontSize="11"></TextBlock>
                                            <TextBlock Foreground="LightGray" FontStyle="Italic" Text="{Binding SourceProperty.PropertyType}" FontSize="10"></TextBlock>
                                        </StackPanel>
                                        <TextBlock Visibility="{Binding ConstantValue.UseAsDefault,Converter={StaticResource VisibilityConverter}}"  FontSize="11" Margin="6,0,0,0" Text=" | Default Value : "/>
                                        <TextBlock Visibility="{Binding ConstantValue.UseAsDefault,Converter={StaticResource VisibilityConverter}}" FontSize="11" Text="{Binding ConstantValue.Value}"></TextBlock>

                                        <TextBlock Visibility="{Binding ConstantValue.IsConstant,Converter={StaticResource VisibilityConverter}}" FontSize="11" Text="{Binding ConstantValue.Value}"></TextBlock>

                                        <TextBlock Visibility="{Binding ConstantValue.IsKeyMapping,Converter={StaticResource VisibilityConverter}}" FontSize="11" Text=" | Key : "></TextBlock>
                                        <TextBlock Visibility="{Binding ConstantValue.IsKeyMapping,Converter={StaticResource VisibilityConverter}}" FontSize="11" Text="{Binding ConstantValue.Value}"></TextBlock>

                                        <StackPanel Orientation="Horizontal" Visibility="{Binding BooleanValue.IsBoolean,Converter={StaticResource VisibilityConverter}}">
                                            <TextBlock Text=" ? " FontSize="11"></TextBlock>
                                            <TextBlock Text="{Binding BooleanValue.TrueValue}" FontSize="11"></TextBlock>
                                            <TextBlock Text=" : " FontSize="11"></TextBlock>
                                            <TextBlock Text="{Binding BooleanValue.FalseValue}" FontSize="11"></TextBlock>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Visibility="{Binding CustomConditionalValue.IsCustomCondition,Converter={StaticResource VisibilityConverter}}">
                                            <StackPanel Orientation="Horizontal" Visibility="{Binding CustomConditionalValue.IsAdvancedExpression,Converter={StaticResource NoVisibilityConverter}}">
                                                <TextBlock Text=" " FontSize="11"></TextBlock>
                                                <TextBlock Text="{Binding CustomConditionalValue.OperatorValue}" FontSize="11"></TextBlock>
                                                <TextBlock Text=" " FontSize="11"></TextBlock>
                                                <TextBlock Text="{Binding CustomConditionalValue.ConditionValue}" FontSize="11"></TextBlock>
                                                <TextBlock Text=" True? : " FontSize="11"></TextBlock>
                                                <TextBlock Visibility="{Binding CustomConditionalValue.IsTrueSourceProperty,Converter={StaticResource NoVisibilityConverter}}" FontSize="11" Text="{Binding CustomConditionalValue.TrueValue}"></TextBlock>
                                                <StackPanel Visibility="{Binding CustomConditionalValue.IsTrueSourceProperty,Converter={StaticResource VisibilityConverter}}">
                                                    <TextBlock Text="{Binding CustomConditionalValue.TrueSourceProperty.Name}" FontSize="11"></TextBlock>
                                                    <TextBlock Foreground="LightGray" FontStyle="Italic" Text="{Binding CustomConditionalValue.TrueSourceProperty.PropertyType}" FontSize="10"></TextBlock>
                                                </StackPanel>
                                                <TextBlock Text=" False? : " FontSize="11"></TextBlock>
                                                <TextBlock Visibility="{Binding CustomConditionalValue.IsFalseSourceProperty,Converter={StaticResource NoVisibilityConverter}}" FontSize="11" Text="{Binding CustomConditionalValue.FalseValue}"></TextBlock>
                                                <StackPanel Visibility="{Binding CustomConditionalValue.IsFalseSourceProperty,Converter={StaticResource VisibilityConverter}}">
                                                    <TextBlock Text="{Binding CustomConditionalValue.FalseSourceProperty.Name}" FontSize="11"></TextBlock>
                                                    <TextBlock Foreground="LightGray" FontStyle="Italic" Text="{Binding CustomConditionalValue.FalseSourceProperty.PropertyType}" FontSize="10"></TextBlock>
                                                </StackPanel>
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal" Visibility="{Binding CustomConditionalValue.IsAdvancedExpression,Converter={StaticResource VisibilityConverter}}">
                                                <TextBlock Text="{Binding CustomConditionalValue.AdvancedExpression}" FontSize="11"></TextBlock>
                                            </StackPanel>
                                        </StackPanel>
                                    </StackPanel>
                                </Border>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="50"/>
                                    <ColumnDefinition Width="50"/>
                                </Grid.ColumnDefinitions>
                                <ComboBox Name="cboSourceProp"  Grid.Column="0" IsEditable="True" IsTextSearchEnabled="True" TextSearch.TextPath="Name"   SelectionChanged="cboSourceProp_SelectionChanged"
                                 ItemsSource="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, 
                                Path=DataContext.SourceProperties}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding Name}" FontSize="11" />
                                                <TextBlock Foreground="LightGray" Text="{Binding PropertyType}" Margin="5,0,0,0" FontSize="10" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <Button Content="Custom" Margin="5,0,0,0" Grid.Column="1" Name="btnNullCheck" Click="btnNullCheck_Click" Height="32" />
                                <Button Content="Clear"  Margin="5,0,0,0" Grid.Column="2"  Name="btnClearMappingButton" Click="btnClearMappingButton_OnClick" Height="32" ></Button>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Complex Value?"  Width="100*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <CheckBox IsEnabled="False" IsChecked="{Binding IsComplex}" />
                                <!--<TextBlock FontStyle="Italic" Text="{Binding IsComplex}"></TextBlock>-->
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <CheckBox Name="complexPropertyCheck" IsChecked="{Binding IsComplex, UpdateSourceTrigger=PropertyChanged}" Checked="complexPropertyCheck_Checked" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Custom Expression"  Width="100*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <CheckBox IsEnabled="False" IsChecked="{Binding IsCustomLogic}" />
                                <!--<TextBlock FontStyle="Italic" Text="{Binding IsCustomLogic}"></TextBlock>-->
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <CheckBox IsEnabled="False"  IsChecked="{Binding IsCustomLogic, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Is Comment" Width="100*" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <CheckBox IsEnabled="False" IsChecked="{Binding IsComment}" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <CheckBox  Name="commentPropertyCheck" IsEnabled="True"  IsChecked="{Binding IsComment, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <Button Name="Transform" Grid.Column="3" Grid.Row="3" Margin="10" Width="120" VerticalAlignment="Top" HorizontalAlignment="Right" Style="{StaticResource BlueButtonStyle}" Height="32" Foreground="#ffffff" Click="Transform_Click" >Generate Maps</Button>


    </Grid>
</UserControl>
