<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      throwExceptions="true"
      internalLogLevel="Trace"
      internalLogFile="\EdgeAXCommerceLink\Logs\nlog-app.log">
  <!-- 
  See http://nlog-project.org/wiki/Configuration_file 
  for information on customizing logging rules and outputs.
   -->
  <variable name="ConnectionString" value="data source=localhost;initial catalog=CLTVINT;persist security info=True;integrated security=True;MultipleActiveResultSets=True;" />
  <variable name="ApplicationName" value="CommerceLink Data Sync" />

	
  <targets aynsc="true">
    <!-- file targets -->
    <target name="asyncFile" xsi:type="AsyncWrapper" overflowAction="Block" queueLimit="1000000"
        batchSize="1000" timeToSleepBetweenBatches="0">
      <target name="Debugfile" xsi:type="File" fileName="/EdgeAXCommerceLink/Logs/File_${shortdate}_Debug.log" autoFlush="false" keepFileOpen="true"
        layout="${longdate} ${level:upperCase=true}: ${message}${newline}(${stacktrace}) ${exception:format=ToString}${newline}${newline}"/>
    </target>

    <target name="file" xsi:type="File" fileName="/EdgeAXCommerceLink/Logs/File_${shortdate}_Main.log" autoFlush="false" keepFileOpen="true"
    layout="${longdate} ${level:upperCase=true}: ${message}${newline}(${stacktrace}) ${exception:format=ToString}"/>

    <target name="TraceFileTarget" xsi:type="AsyncWrapper" overflowAction="Block" queueLimit="1000000" batchSize="1000" timeToSleepBetweenBatches="0">

      <target name="textFile" xsi:type="File" fileName="/EdgeAXCommerceLink/Logs/FileSyncService_TraceLog.csv" archiveOldFileOnStartup="true" archiveAboveSize="10000000" archiveNumbering="Sequence" autoFlush="false" keepFileOpen="true" >
        <layout xsi:type="CsvLayout"  delimiter="Comma" withHeader="true" quoting="Nothing">
          <column name="StoreId" layout="${event-properties:item=StoreId}" />
          <column name="JobId" layout="${event-properties:item=JobId}" />
          <column name="JobName" layout="${event-properties:JobName}"  />
          <column name="Action" layout="${event-properties:item=Action}" />
          <column name="Details" layout="${event-properties:item=Details}" />
          <column name="Time" layout="${event-properties:Time:format=yyyy-MM-dd HH\:mm\:ss.fff}"  />
        </layout>

      </target>

    </target>
    <!--Email targets-->
    <target name="gmail" xsi:type="Mail"
              smtpServer="smtp.gmail.com"
              smtpPort="587"
              smtpAuthentication="Basic"
              smtpUserName="emailaxconnector@gmail.com"
              smtpPassword="axconnector@1234"
              enableSsl="true"
              from="emailaxconnector@gmail.com"
              to="emailaxconnector@gmail.com"
               timeout="30000"
          />

    <target name="SalesOrderGmail" xsi:type="Mail"
              smtpServer="smtp.gmail.com"
              smtpPort="587"
              smtpAuthentication="Basic"
              smtpUserName="emailaxconnector@gmail.com"
              smtpPassword="axconnector@1234"
              enableSsl="true"
              from="emailaxconnector@gmail.com"
              to="usman.younas@systemsltd.com"
              cc="syedmusabshaheed@gmail.com"
              subject="Sales Order Exception Occurs"
              timeout="30000"
          />

    <!-- database targets -->
    <target xsi:type="FallbackGroup"
        name="db"
        returnToFirstOnSuccess="true">
      <target name="database" xsi:type="Database"
              keepConnection="true"
              useTransactions="true"
              dbProvider="System.Data.SqlClient"
              connectionString="${var:ConnectionString}"
              commandText="INSERT INTO Log(CreatedOn, EventLevel, CreatedBy, MachineName, EventMessage, ErrorSource, ErrorClass, ErrorMethod, ErrorMessage, InnerErrorMessage,IdentityId,StoreId) 
              VALUES (@CreatedOn, @EventLevel,  @CreatedBy,'CommerceLink File Sync', @EventMessage, @ErrorSource, @ErrorClass, @ErrorMethod, @ErrorMessage, @InnerErrorMessage,@IdentityId,@StoreId)">
        <!-- parameters for the command -->
        <parameter name="@CreatedOn" layout="${date:s}" />
        <parameter name="@EventLevel" layout="${level}" />
        <parameter name="@CreatedBy" layout="${event-properties:item=CreatedBy}" />
        <parameter name="@MachineName" layout="${machinename}" />
        <parameter name="@EventMessage" layout="${message}" />
        <parameter name="@ErrorSource" layout="${callsite:className=true:fileName=false:includeSourcePath=false:methodName=true}" />
        <parameter name="@ErrorClass" layout="${event-context:item=error-class}" />
        <parameter name="@ErrorMethod" layout="${event-context:item=error-method}" />
        <parameter name="@ErrorMessage" layout="${event-context:item=error-message}" />
        <parameter name="@InnerErrorMessage" layout="${event-context:item=inner-error-message}" />
        <parameter name="@IdentityId" layout="${event-properties:item=IdentityId}" />
        <parameter name="@StoreId" layout="${event-properties:item=StoreId}" />

      </target>
      <target name="dbFile" xsi:type="File" fileName="/EdgeAXCommerceLink/Logs/File_${shortdate}_DB.log" autoFlush="false" keepFileOpen="true"
      layout="${longdate} ${level:upperCase=true}: ${message}${newline}(${stacktrace}) ${exception:format=ToString}"/>
    </target>
  </targets>
  <rules>
    <!-- add your logging rules here -->
    <logger name="TraceLogger" minlevel="Trace" writeTo="TraceFileTarget" />
    <!--<logger name="*" minlevel="Trace" writeTo="asyncFile" />-->
    <logger name="*" minlevel="Info" writeTo="file" />
    <logger name="*" minlevel="Warn" writeTo="db" />
    <!--<logger name="*" minlevel="Fatal" writeTo="gmail" />-->
    <!--<logger name="*" level="Error" writeTo="SalesOrderGmail" />-->
  </rules>
</nlog>